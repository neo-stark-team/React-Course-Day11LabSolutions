Class Exercise Lab:

Updated Life Cycle Hooks

You have used React useState Hook. Now let we see about React useEffect.
React useEffect is a function that gets executed for three components life Cycle
1. componentDidMount
2. componentDidUpdate
3. componentWillUnmount

Program:
Create a functional component App that has constant message ="Hello dear one, learning React...?".
Using useEffect change the message to "Great.... This is time to learn about HOOKS" after setting timeout 2000.
And also add a console.log message to trace the useEffect calling.

 useEffect(() => {
    console.log('use effect hook called');

    setTimeout(() => {
      setMessage("Great.... This is time to learn about HOOKS");
    }, 2000)
  })

  This above code will give the expected output. When you look the console output, the useEffect called more than twice.
This kindof code leads to weird side-effects and have chances to freeze any app from an infinite loop.
In order to avoid it, let we optimize the code little bit more. to avoid the repeated calling of useEffect.

Lab Environment

In the project environment, there are two folders.

a. react - react folder is the read-only folder and has the project's test cases.

b. reactapp â€“ explore your code in this folder. you can use it for coding.

Default settings mapped to run the frontend application in PORT-8081:

The package.json file in reactapp folder is modified as: (Note -If not you can change it as below)

"scripts": {

"start": "PORT=8081 react-scripts start",

"build": "react-scripts build",

"test": "react-scripts test",

"eject": "react-scripts eject"}

 

To run the application:

 

Open the terminal - From Menu bar, select Terminal, then Open Terminal

 

Type the below commands to execute the react project

 

cd reactapp - command to open the folder

 

nvm use 14 - command to select the node version to 14

 

npm install - command to add the packages
[All packages are declared within package.json file]

 

npm start - command to run the application in PORT 8081

Warning: Disk Space need to extended for importing the few packages in Material UI

 